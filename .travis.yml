language: c

matrix:
  include:
    - name: "GCC 7 (with -Os) on Trusty with OTP 20"
      os: linux
      dist: trusty
      sudo: true
      addons:
        apt:
          sources:
            - sourceline: deb https://packages.erlang-solutions.com/ubuntu trusty contrib
              key_url: https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - gperf
            - valgrind
            - esl-erlang=1:20.2.2
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      script:
        - export CC=gcc-7
        - export CXX=g++-7
        - export CFLAGS="-Os"
        - export CXXFLAGS="-Os"
        - mkdir -p build
        - cd build
        - cat /usr/lib/erlang/releases/RELEASES
        - cc --version
        - cmake ..
        - make
        - valgrind ./tests/test-erlang
        - ./tests/test-erlang
        - ./src/AtomVM ./tests/libs/estdlib/test_estdlib.avm
        - ./src/AtomVM ./tests/libs/eavmlib/test_eavmlib.avm
      before_install:
        - eval "${MATRIX_EVAL}"

    - name: "GCC 7 (with -O2) on Trusty with OTP 20"
      os: linux
      dist: trusty
      sudo: true
      addons:
        apt:
          sources:
            - sourceline: deb https://packages.erlang-solutions.com/ubuntu trusty contrib
              key_url: https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - gperf
            - valgrind
            - esl-erlang=1:20.2.2
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      script:
        - export CC=gcc-7
        - export CXX=g++-7
        - export CFLAGS="-O2"
        - export CXXFLAGS="-O2"
        - mkdir -p build
        - cd build
        - cat /usr/lib/erlang/releases/RELEASES
        - cc --version
        - cmake ..
        - make
        - valgrind ./tests/test-erlang
        - ./tests/test-erlang
        - ./src/AtomVM ./tests/libs/estdlib/test_estdlib.avm
        - ./src/AtomVM ./tests/libs/eavmlib/test_eavmlib.avm
      before_install:
        - eval "${MATRIX_EVAL}"

    - name: "GCC 7 (with -O3) on Trusty with OTP 20"
      os: linux
      dist: trusty
      sudo: true
      addons:
        apt:
          sources:
            - sourceline: deb https://packages.erlang-solutions.com/ubuntu trusty contrib
              key_url: https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - gperf
            - valgrind
            - esl-erlang=1:20.2.2
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      script:
        - export CC=gcc-7
        - export CXX=g++-7
        - export CFLAGS="-O3"
        - export CXXFLAGS="-O3"
        - mkdir -p build
        - cd build
        - cat /usr/lib/erlang/releases/RELEASES
        - cc --version
        - cmake ..
        - make
        - valgrind ./tests/test-erlang
        - ./tests/test-erlang
        - ./src/AtomVM ./tests/libs/estdlib/test_estdlib.avm
        - ./src/AtomVM ./tests/libs/eavmlib/test_eavmlib.avm
      before_install:
        - eval "${MATRIX_EVAL}"

    - name: "GCC 6 (with -O2) on Trusty with OTP 20"
      os: linux
      dist: trusty
      sudo: true
      addons:
        apt:
          sources:
            - sourceline: deb https://packages.erlang-solutions.com/ubuntu trusty contrib
              key_url: https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - gperf
            - valgrind
            - esl-erlang=1:20.2.2
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
      script:
        - export CC=gcc-6
        - export CXX=g++-6
        - export CFLAGS="-O2"
        - export CXXFLAGS="-O2"
        - mkdir -p build
        - cd build
        - cat /usr/lib/erlang/releases/RELEASES
        - cc --version
        - cmake ..
        - make
        - valgrind ./tests/test-erlang
        - ./tests/test-erlang
        - ./src/AtomVM ./tests/libs/estdlib/test_estdlib.avm
        - ./src/AtomVM ./tests/libs/eavmlib/test_eavmlib.avm
      before_install:
        - eval "${MATRIX_EVAL}"

    - name: "GCC 5 (with -O2) on Trusty with OTP 20"
      os: linux
      dist: trusty
      sudo: true
      addons:
        apt:
          sources:
            - sourceline: deb https://packages.erlang-solutions.com/ubuntu trusty contrib
              key_url: https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - gperf
            - valgrind
            - esl-erlang=1:20.2.2
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
      script:
        - export CC=gcc-5
        - export CXX=g++-5
        - export CFLAGS="-O2"
        - export CXXFLAGS="-O2"
        - mkdir -p build
        - cd build
        - cat /usr/lib/erlang/releases/RELEASES
        - cc --version
        - cmake ..
        - make
        - valgrind ./tests/test-erlang
        - ./tests/test-erlang
        - ./src/AtomVM ./tests/libs/estdlib/test_estdlib.avm
        - ./src/AtomVM ./tests/libs/eavmlib/test_eavmlib.avm
      before_install:
        - eval "${MATRIX_EVAL}"

    - name: "GCC 4.8 (with -O2) on Trusty with OTP 20"
      os: linux
      dist: trusty
      sudo: true
      addons:
        apt:
          sources:
            - sourceline: deb https://packages.erlang-solutions.com/ubuntu trusty contrib
              key_url: https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc
          packages:
            - g++
            - gperf
            - valgrind
            - esl-erlang=1:20.2.2
      script:
        - mkdir -p build
        - cd build
        - export CFLAGS="-O2"
        - export CXXFLAGS="-O2"
        - cat /usr/lib/erlang/releases/RELEASES
        - cc --version
        - cmake ..
        - make
        - valgrind ./tests/test-erlang
        - ./tests/test-erlang
        - ./src/AtomVM ./tests/libs/estdlib/test_estdlib.avm
        - ./src/AtomVM ./tests/libs/eavmlib/test_eavmlib.avm

    - name: "GCC 4.8 (with -O2, 32 bit) on Trusty with OTP 20"
      os: linux
      dist: trusty
      sudo: true
      addons:
        apt:
          sources:
            - sourceline: deb https://packages.erlang-solutions.com/ubuntu trusty contrib
              key_url: https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc
          packages:
            - g++
            - gcc-multilib
            - g++-multilib
            - libc6-dev-i386
            - libc6-dbg:i386
            - zlib1g-dev:i386
            - gperf
            - valgrind
            - esl-erlang=1:20.2.2
      script:
        - mkdir -p build
        - cd build
        - export CFLAGS="-m32 -O2"
        - export CXXFLAGS="-m32 -O2"
        - cmake ..
        - make
        - valgrind ./tests/test-erlang
        - ./tests/test-erlang
        - ./src/AtomVM ./tests/libs/estdlib/test_estdlib.avm
        - ./src/AtomVM ./tests/libs/eavmlib/test_eavmlib.avm

    - name: "clang 5 (with -O2) on Trusty with OTP 20"
      os: linux
      dist: trusty
      sudo: true
      compiler: clang
      addons:
        apt:
          sources:
            - sourceline: deb https://packages.erlang-solutions.com/ubuntu trusty contrib
              key_url: https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc
          packages:
            - gperf
            - valgrind
            - esl-erlang=1:20.2.2
      script:
        - export CFLAGS="-O2"
        - export CXXFLAGS="-O2"
        - mkdir -p build
        - cd build
        - cmake ..
        - make
        - valgrind ./tests/test-erlang
        - ./tests/test-erlang
        - ./src/AtomVM ./tests/libs/estdlib/test_estdlib.avm
        - ./src/AtomVM ./tests/libs/eavmlib/test_eavmlib.avm
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
      before_install:
        - eval "${MATRIX_EVAL}"

    - name: "clang 8 (with -O3 and -DAVM_DISABLE_FP=on) on Bionic with OTP 21"
      os: linux
      dist: bionic
      sudo: true
      compiler: clang
      addons:
        apt:
          sources:
            - sourceline: deb https://packages.erlang-solutions.com/ubuntu bionic contrib
              key_url: https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc
          packages:
            - clang-8
            - gperf
            - valgrind
            - esl-erlang=1:21.0
      script:
        - export CFLAGS="-O3"
        - export CXXFLAGS="-O3"
        - mkdir -p build
        - cd build
        - cat /usr/lib/erlang/releases/RELEASES
        - cc --version
        - cmake -DAVM_DISABLE_FP=on ..
        - make
        - valgrind ./tests/test-erlang
        - ./tests/test-erlang
        - ./src/AtomVM ./tests/libs/estdlib/test_estdlib.avm
        - ./src/AtomVM ./tests/libs/eavmlib/test_eavmlib.avm
      env:
        - MATRIX_EVAL="CC=clang-8 && CXX=clang++-8"
      before_install:
        - eval "${MATRIX_EVAL}"

    - name: "GCC 8 on Bionic (32 bit and -DAVM_USE_32BIT_FLOAT=on) with OTP 21"
      os: linux
      dist: bionic
      sudo: true
      addons:
        apt:
          sources:
            - sourceline: deb https://packages.erlang-solutions.com/ubuntu bionic contrib
              key_url: https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc
          packages:
            - gcc-8
            - g++-8
            - gcc-8-multilib
            - g++-8-multilib
            - libc6-dev-i386
            - libc6-dbg:i386
            - zlib1g-dev:i386
            - gperf
            - valgrind
            - esl-erlang=1:21.0
      script:
        - export CC=gcc-8
        - export CXX=g++-8
        - export CFLAGS="-O2 -m32"
        - export CXXFLAGS="-O2 -m32"
        - mkdir -p build
        - cd build
        - cat /usr/lib/erlang/releases/RELEASES
        - cc --version
        - cmake -DAVM_USE_32BIT_FLOAT=on ..
        - make
        - valgrind ./tests/test-erlang
        - ./tests/test-erlang
        - ./src/AtomVM ./tests/libs/estdlib/test_estdlib.avm
        - ./src/AtomVM ./tests/libs/eavmlib/test_eavmlib.avm
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
      before_install:
        - eval "${MATRIX_EVAL}"

    - name: "GCC 7 on Trusty with OTP 21"
      os: linux
      dist: trusty
      sudo: true
      addons:
        apt:
          sources:
            - sourceline: deb https://packages.erlang-solutions.com/ubuntu trusty contrib
              key_url: https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - gperf
            - valgrind
            - esl-erlang=1:21.0
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      script:
        - export CC=gcc-7
        - export CXX=g++-7
        - mkdir -p build
        - cd build
        - cat /usr/lib/erlang/releases/RELEASES
        - cc --version
        - cmake ..
        - make
        - valgrind ./tests/test-erlang
        - ./tests/test-erlang
        - ./src/AtomVM ./tests/libs/estdlib/test_estdlib.avm
        - ./src/AtomVM ./tests/libs/eavmlib/test_eavmlib.avm
      before_install:
        - eval "${MATRIX_EVAL}"

    - name: "ESP32 platform"
      services:
        - docker
      os: linux
      dist: trusty
      sudo: true
      script: |
        docker run -it -v ${TRAVIS_BUILD_DIR}:/root/AtomVM uninstall/atomvm-platforms-docker /bin/bash -c '
        cd /root/AtomVM/src/platforms/esp32
        make defconfig && make -j4'

    - name: "STM32 platform"
      services:
        - docker
      os: linux
      dist: trusty
      sudo: true
      script: |
        docker run -it -v ${TRAVIS_BUILD_DIR}:/root/AtomVM uninstall/atomvm-platforms-docker /bin/bash -c '
        cd /root/AtomVM/src/platforms/stm32
        mkdir build && cd build
        cmake -DCMAKE_TOOLCHAIN_FILE=../cmake/arm-toolchain.cmake -DLIBOPENCM3_DIR=$LIBOPENCM3_DIR .. && make -j4'

    - name: "GCC 7 (with -O2) on Bionic/arm64 with OTP 20"
      os: linux
      dist: bionic
      arch: arm64
      compiler: gcc
      sudo: true
      addons:
        apt:
          packages:
            - erlang
            - gperf
      script:
        - erl -eval 'erlang:display(erlang:system_info(otp_release)), halt().'  -noshell
        - cat /etc/lsb-release
        - export CFLAGS="-O2"
        - export CXXFLAGS="-O2"
        - mkdir -p build
        - cd build
        - cc --version
        - cmake ..
        - make
        - ./tests/test-erlang
        - ./src/AtomVM ./tests/libs/estdlib/test_estdlib.avm
        - ./src/AtomVM ./tests/libs/eavmlib/test_eavmlib.avm
